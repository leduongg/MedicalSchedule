@page
@model MedicalScheduleWeb.Pages.Admin.ManageAppointmentModel
@{
}
<!DOCTYPE html>
<html lang="en">
<head>
    <title>Manager Appointment</title>
    <link rel="stylesheet" type="text/css" href="/css/maccount.css">
</head>
<body>
    <h1>Manager Appointment</h1>
    <div class="float-right">
        <div class="input-group">
            <input type="text" class="form-control" id="searchInput" placeholder="Search...">
        </div>
    </div>
    <div id="listAppointment">
        <table id="accountTable">
            <thead>
                <tr>
                    <th>PatientName</th>
                    <th>DoctorName</th>
                    <th>Appointment Date</th>
                    <th>Notes</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

    <div id="pagination" class="d-flex justify-content-center">
        <ul class="pagination">
            <li class="page-item" id="prevPage">
                <a class="page-link" href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            <li class="page-item" id="nextPage">
                <a class="page-link" href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </div>

    <a href="/Admin/Dashboard" class="back-to-dashboard">Back to Dashboard</a>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

    <!-- Bootstrap JS -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        // jQuery code for CRUD operations
        $(document).ready(function () {
            var currentPage = 1;
            var totalPages = 0;
            var pageSize = 5;

            function loadPage(page) {
                $.ajax({
                    url: 'https://localhost:7239/api/Appointment/GetAppointments?page=' + page + '&pageSize=' + pageSize,
                    type: 'GET',
                    success: function (response) {
                        var data = response.data;
                        $('#listAppointment tbody').empty();
                        data.forEach(function (apoi) {
                            var shortNotes = apoi.notes.length > 20 ? apoi.notes.substring(0, 20) + '...' : apoi.notes;
                            var row = '<tr>' +
                                '<td>' + apoi.patientName + '</td>' +
                                '<td>' + apoi.doctorName + '</td>' +
                                '<td>' + new Date(apoi.appointmentDateTime).toLocaleDateString() + '</td>' +
                                '<td title="' + apoi.notes + '">' + shortNotes + '</td>' +
                                '<td>' + apoi.status + '</td>' +
                                '<td>' +
                                '<button class="view-btn btn btn-primary" data-id="' + apoi.appointmentId + '">View</button>' +
                                '<button class="edit-btn btn btn-secondary" data-id="' + apoi.appointmentId + '">Edit</button>' +
                                '<button class="delete-btn btn btn-danger" data-id="' + apoi.appointmentId + '">Delete</button>' +
                                '</td>' +
                                '</tr>';
                            $('#listAppointment tbody').append(row);
                        });
                        totalPages = response.totalPages;
                    },

                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            }
            // Function để tạo và hiển thị các nút trang
            function displayPagination() {
                $('#pagination').empty(); // Xóa các nút trang hiện tại
                var $ul = $('<ul class="pagination"></ul>');
                // Thêm nút trang trước
                $ul.append('<li class="page-item" id="prevPage"><a class="page-link" href="#" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li>');
                // Thêm các nút trang
                for (var i = 1; i <= totalPages; i++) {
                    $ul.append('<li class="page-item"><a class="page-link" href="#">' + i + '</a></li>');
                }
                // Thêm nút trang tiếp theo
                $ul.append('<li class="page-item" id="nextPage"><a class="page-link" href="#" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li>');
                $('#pagination').append($ul);
            }
            // Initial load of first page
            loadPage(1);
            // Xử lý khi nhấp vào nút phân trang trước
            $(document).on('click', '#prevPage', function () {
                if (currentPage > 1) {
                    currentPage--;
                    loadPage(currentPage);
                }
            });

            // Xử lý khi nhấp vào nút phân trang tiếp theo
            $(document).on('click', '#nextPage', function () {
                if (currentPage < totalPages) {
                    currentPage++;
                    loadPage(currentPage);
                }
            });

            // Xử lý khi nhấp vào nút trang cụ thể
            $(document).on('click', '.page-link', function () {
                var page = parseInt($(this).text()); // Lấy số trang từ nội dung của nút
                if (!isNaN(page)) { // Kiểm tra nếu là một số
                    currentPage = page;
                    loadPage(currentPage);
                }
            });

            // Lấy số lượng trang trước khi hiển thị nút trang
            $.ajax({
                url: 'https://localhost:7239/api/Page/PageCount?objectType=apppointment&pageSize=5',
                type: 'GET',
                success: function (data) {
                    totalPages = data;
                    displayPagination(); // Hiển thị các nút trang sau khi đã biết tổng số trang
                },
                error: function (error) {
                    console.error('Error:', error);
                }
            });

            // Function to handle view button click
            $(document).on('click', '.view-btn', function () {
                var apoiId = $(this).data('id');
                $.ajax({
                    url: 'https://localhost:7239/api/Appointment/GetAppointment/' + apoiId,
                    type: 'GET',
                    success: function (apoi) {
                        $('#patientName').text(apoi.patientName);
                        $('#doctorName').text(apoi.doctorName);
                        $('#appointmentDateTime').text(apoi.appointmentDateTime);
                        $('#notes').text(apoi.notes);
                        $('#status').text(apoi.status);

                        $('#viewBookModal').modal('show');
                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            });

            // Delete button
            $(document).on('click', '.delete-btn', function () {
                var apoiId = $(this).data('id');
                $('#confirmDeleteModal').modal('show'); // Hiển thị modal xác nhận
                $('#confirmDeleteBtn').data('id', apoiId); // Lưu trữ ID của tài khoản vào nút xác nhận
            });
            $(document).on('click', '#confirmDeleteBtn', function () {
                var apoiId = $(this).data('id');
                // Thực hiện yêu cầu xóa tài khoản với accountId đã lưu trữ
                $.ajax({
                    url: 'https://localhost:7239/api/Appointment/DeleteAppointment/' + apoiId,
                    type: 'DELETE',
                    success: function (response) {
                        // Reload accounts after successful deletion
                        loadPage(currentPage);
                        // Đóng modal sau khi xóa thành công
                        $('#confirmDeleteModal').modal('hide');
                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            });

            $('#searchInput').on('input', function () {
                var keyword = $(this).val();
                if (keyword.trim() === '') {
                    loadPage(1);
                } else {
                    searchAppointment(keyword);
                }
            });

            function searchAppointment(keyword) {
                $.ajax({
                    url: 'https://localhost:7239/api/Appointment/Search?keyword=' + keyword,
                    type: 'GET',
                    success: function (data) {
                        $('#listAppointment tbody').empty();
                        data.forEach(function (apoi) {
                            var shortNotes = apoi.notes.length > 20 ? apoi.notes.substring(0, 20) + '...' : apoi.notes;
                            var row = '<tr>' +
                                '<td>' + apoi.patientName + '</td>' +
                                '<td>' + apoi.doctorName + '</td>' +
                                '<td>' + new Date(apoi.appointmentDateTime).toLocaleDateString() + '</td>' +
                                '<td title="' + apoi.notes + '">' + shortNotes + '</td>' +
                                '<td>' + apoi.status + '</td>' +
                                '<td>' +
                                '<button class="view-btn btn btn-primary" data-id="' + apoi.appointmentId + '">View</button>' +
                                '<button class="edit-btn btn btn-secondary" data-id="' + apoi.appointmentId + '">Edit</button>' +
                                '<button class="delete-btn btn btn-danger" data-id="' + apoi.appointmentId + '">Delete</button>' +
                                '</td>' +
                                '</tr>';
                            $('#listAppointment tbody').append(row);
                        });
                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            }

            // Edit button
            $(document).on('click', '.edit-btn', function () {
                var apoiId = $(this).data('id');
                $.ajax({
                    url: 'https://localhost:7239/api/Appointment/GetAppointment/' + apoiId,
                    type: 'GET',
                    success: function (apoi) {
                        $('#editPatientName').val(apoi.patientName);
                        $('#editDoctorName').val(apoi.doctorName);
                        $('#editAppointmentDateTime').val(apoi.appointmentDateTime);
                        $('#editNotes').val(apoi.notes);
                        $('#editStatus').val(apoi.status);

                        $('#editAppointmentModal').modal('show');
                        $('#editAppointmentForm').submit(function (event) {
                            event.preventDefault();
                            var editedApoi = {
                                appointmentId: apoiId,
                                patientName: $('#editPatientName').val(),
                                doctorName: $('#editDoctorName').val(),
                                appointmentDateTime: $('#editAppointmentDateTime').val(),
                                notes: $('#editNotes').val(),
                                status: $('#editStatus').val()
                            };
                            $.ajax({
                                url: 'https://localhost:7239/api/Appointment/UpdateAppointment/' + apoiId,
                                type: 'PUT',
                                contentType: 'application/json',
                                data: JSON.stringify(editedApoi),
                                success: function (response) {
                                    // Reload appointments after successful update
                                    loadPage(1);
                                    // Close modal after successful update
                                    $('#editAppointmentModal').modal('hide');
                                },
                                error: function (error) {
                                    console.error('Error:', error);
                                }
                            });
                        });

                    },
                    error: function (error) {
                        console.error('Error:', error);
                    }
                });
            });

        });

        
                


    </script>
    <!-- Modal -->
    <div class="modal fade" id="viewBookModal" tabindex="-1" role="dialog" aria-labelledby="viewBookModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="viewBookModalLabel">Appointment Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><strong>Patient:</strong> <span id="patientName"></span></p>
                    <p><strong>Doctor:</strong> <span id="doctorName"></span></p>
                    <p><strong>Date & Time:</strong> <span id="appointmentDateTime"></span></p>
                    <p><strong>Notes:</strong> <span id="notes"></span></p>
                    <p><strong>Status:</strong> <span id="status"></span></p>
                </div>
            </div>
        </div>
    </div>
    <!-- Confirmation Modal -->
    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm delete appointment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure want to delete appointment?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>
    <!-- Edit Appointment Modal -->
    <div class="modal fade" id="editAppointmentModal" tabindex="-1" role="dialog" aria-labelledby="editAppointmentModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editAppointmentModalLabel">Edit Appointment</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editAppointmentForm">
                        <div class="form-group">
                            <label for="editPatientName">Patient Name</label>
                            <input type="text" class="form-control" id="editPatientName" disabled>
                        </div>
                        <div class="form-group">
                            <label for="editDoctorName">Doctor Name</label>
                            <input type="text" class="form-control" id="editDoctorName" disabled>
                        </div>
                        <div class="form-group">
                            <label for="editAppointmentDateTime">Appointment Date & Time</label>
                            <input type="datetime-local" class="form-control" id="editAppointmentDateTime" disabled>
                        </div>
                        <div class="form-group">
                            <label for="editNotes">Notes</label>
                            <textarea class="form-control" id="editNotes" rows="3" disabled></textarea>
                        </div>
                        <div class="form-group">
                            <label for="editStatus">Status</label>
                            <select name="editStatus" id="editStatus" class="form-control" required>
                                <option value="Pending">Pending</option>
                                <option value="Accept">Accept</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
