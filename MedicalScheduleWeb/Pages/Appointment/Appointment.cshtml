@page
@model MedicalScheduleWeb.Pages.Appointment.AppointmentModel
@{
}
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" type="text/css" href="/css/appointment.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
</head>
<body>
    <div class="formbold-main-wrapper">
        <div class="formbold-form-wrapper">
            <form action="#" method="POST">
                <div class="formbold-mb-5">
                    <label for="name" class="formbold-form-label"> Full Name </label>
                    <input type="text"
                           name="name"
                           id="name"
                           placeholder="Full Name"
                           class="formbold-form-input" required />
                </div>
                <div class="formbold-mb-5">
                    <label for="phone" class="formbold-form-label"> Phone Number </label>
                    <input type="text"
                           name="phone"
                           id="phone"
                           placeholder="Enter your phone number"
                           class="formbold-form-input" required />
                </div>
                <div class="formbold-mb-5">
                    <label for="email" class="formbold-form-label"> Email </label>
                    <input type="email"
                           name="email"
                           id="email"
                           placeholder="Enter your email"
                           class="formbold-form-input" required />
                </div>
                <div class="formbold-mb-5">
                    <label for="address" class="formbold-form-label"> Address </label>
                    <input type="text"
                           name="address"
                           id="address"
                           placeholder="Enter your address"
                           class="formbold-form-input" required />
                </div>
                <div class="flex flex-wrap formbold--mx-3">
                    <div class="w-full sm:w-half formbold-px-3">
                        <div class="formbold-mb-5 w-full">
                            <label for="date" class="formbold-form-label"> Date Of Birth</label>
                            <input type="date"
                                   name="date"
                                   id="date"
                                   class="formbold-form-input" required />
                        </div>
                    </div>
                    <div class="w-full sm:w-half formbold-px-3">
                        <div class="formbold-mb-5 w-full">
                            <label for="gender" class="formbold-form-label">Gender</label>
                            <select name="gender" id="gender" class="form-input formbold-form-input">
                                <option value="male">Male</option>
                                <option value="female">Female</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="formbold-mb-5 formbold-pt-3">
                    <label class="formbold-form-label formbold-form-label-2">
                        Appointment Medical
                    </label>
                    <div class="flex flex-wrap formbold--mx-3">
                        <div class="w-full sm:w-half formbold-px-3">
                            <div class="formbold-mb-5 w-full">
                                <label for="doctor" class="formbold-form-label">Doctor</label>
                                <select name="doctor" id="doctor" class="form-input formbold-form-input">
                                    <option>Select a doctor</option>
                                </select>
                            </div>
                        </div>
                        <div class="w-full sm:w-half formbold-px-3">
                            <div class="formbold-mb-5 w-full">
                                <label for="apoidate" class="formbold-form-label"> Appointment Date</label>
                                <input type="date"
                                       name="apoidate"
                                       id="apoidate"
                                       class="formbold-form-input" required />
                            </div>
                        </div>
                    </div>
                    <div class="formbold-mb-5">
                        <label for="note" class="formbold-form-label"> Notes  </label>
                        <input type="text"
                               name="note"
                               id="note"
                               placeholder="Note your expression"
                               class="formbold-form-input"
                               required />
                    </div>
                </div>
                <div>
                    <button class="formbold-btn">Book Appointment</button>
                </div>
            </form>
        </div>
    </div>
    <!-- Đường link Back to Home -->
    <div class="back-to-home-link">
        <a href="/Home/Home">Back to Home</a>
    </div>
    <!-- Modal hiển thị thông báo thành công -->
    <div id="successModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <p id="successMessage"></p>
        </div>
    </div>

    <!-- Modal hiển thị thông báo thất bại -->
    <div id="errorModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <p id="errorMessage"></p>
        </div>
    </div>
    <script>
        // Load doctor options
        $(document).ready(function () {
            checkPatientExistenceAfterLogin(function (response) {
                // Code trong hàm callback sẽ được thực thi sau khi kiểm tra sự tồn tại của bệnh nhân
                // Fetch doctors
                $.ajax({
                    url: 'https://localhost:7239/api/Doctor',
                    type: 'GET',
                    dataType: 'json',
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('token')
                    },
                    success: function (data) {
                        populateDoctorOptions(data);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log('Error fetching doctors:', errorThrown);
                    }
                });
            });
        });
        // Populate doctor options in select dropdown
        function populateDoctorOptions(doctors) {
            $('#doctor').empty().append($('<option>', {
                value: '',
                text: 'Select a doctor'
            }));
            doctors.forEach(function (doctor) {
                $('#doctor').append($('<option>', {
                    value: doctor.doctorId,
                    text: doctor.fullName
                }));
            });
        }

        // Check patient existence after login
        function checkPatientExistenceAfterLogin(callback) {
            var userId = localStorage.getItem('userId');
            $.ajax({
                url: 'https://localhost:7239/api/Patient/CheckPatientExist/' + userId,
                type: 'GET',
                contentType: 'application/json',
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('token')
                },
                success: function (response) {
                    console.log(response);
                    if (response != null) {
                        displayPatientInformation(response);
                    }
                    if (typeof callback === 'function') {
                        callback(response); // Gọi hàm callback nếu được truyền vào và response được trả về
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log('Error checking patient existence:', errorThrown);
                    callback(null);
                }
            });
        }

        // Display patient information in form fields
        function displayPatientInformation(patientData) {
            console.log("cos");
            $('#name').val(patientData.fullName);
            $('#phone').val(patientData.phone);
            $('#email').val(patientData.email);
            $('#address').val(patientData.address);
            $('#date').val(new Date(patientData.dateOfBirth).toISOString().split('T')[0]);
            if (patientData.gender === "Male") {
                $('#gender').val("male");
            } else {
                $('#gender').val("female");
            }

        }

        // Create patient and appointment on form submission
        $('form').submit(function (event) {
            event.preventDefault();
            checkPatientExistenceAfterLogin(function (response) {
                if (response == null) {
                    // Bệnh nhân không tồn tại, tạo bệnh nhân mới
                    var patientData = {
                        name: $('#name').val(),
                        dateOfBirth: $('#date').val(),
                        gender: $('#gender').val(),
                        address: $('#address').val(),
                        email: $('#email').val(),
                        phone: $('#phone').val(),
                    };
                    createPatient(patientData);
                } else {
                    // Bệnh nhân đã tồn tại, tạo cuộc hẹn
                    console.log(response);
                    createAppointment(response.patientId);
                }
            });
        });


        // Create patient
        function createPatient(patientData) {
            var userId = localStorage.getItem('userId');
            var patientData = {
                userId: userId,
                fullName: patientData.name,
                dateOfBirth: patientData.dateOfBirth,
                gender: patientData.gender,
                address: patientData.address,
                email: patientData.email,
                phone: patientData.phone,
            };
            $.ajax({
                url: 'https://localhost:7239/api/Patient/CreatePatient',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(patientData),
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('token')
                },
                success: function (response) {
                    console.log('Patient created:', response);
                    createAppointment(response.patientId);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log('Error creating patient:', errorThrown);
                    displayErrorMessage('An error occurred while creating the patient. Please try again later.');
                }
            });
        }

        // Create appointment
        function createAppointment(patientId) {
            var appointmentDate = new Date($('#apoidate').val()).toISOString();
            var appointmentData = {
                patientId: patientId,
                doctorId: $('#doctor').val(),
                appointmentDateTime: appointmentDate,
                notes: $('#note').val(),
                status: "Pending"
            };
            $.ajax({
                url: 'https://localhost:7239/api/Appointment/CreateAppointment',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(appointmentData),
                success: function (response) {
                    console.log('Appointment created:', response);
                    // Hiển thị thông báo thành công trực tiếp trên trang
                    $('#successMessage').text('Appointment created successfully.');
                    $('#successModal').show();
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log('Error creating appointment:', errorThrown);
                    // Hiển thị thông báo lỗi trực tiếp trên trang
                    $('#errorMessage').text('An error occurred while creating the appointment. Please try again later.');
                    $('#errorModal').show();
                }
            });
        }
        // Hàm đóng modal
        function closeModal(modalId) {
            $('#' + modalId).hide();
        }

        $(document).ready(function () {
            // Xử lý sự kiện nhấn nút đóng modal
            $('.close').click(function () {
                closeModal($(this).closest('.modal').attr('id'));
            });

            // Xử lý sự kiện click ra ngoài modal để đóng modal
            $(window).click(function (event) {
                if ($(event.target).hasClass('modal')) {
                    closeModal($(event.target).attr('id'));
                }
            });
        });
    </script>


</body>
</html>